// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NEW_USER when rendered should match the snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <NewUser
    history={Array []}
    logIn={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <form
        onSubmit={[Function]}
>
        <label
                htmlFor="name"
        >
                Name: 
        </label>
        <input
                name="name"
                onChange={[Function]}
                type="text"
                value=""
        />
        <label
                htmlFor="email"
        >
                Email: 
        </label>
        <input
                name="email"
                onChange={[Function]}
                type="text"
                value=""
        />
        <label
                htmlFor="password"
        >
                Password: 
        </label>
        <input
                name="password"
                onChange={[Function]}
                type="text"
                value=""
        />
        <input
                type="submit"
        />
</form>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <label
            htmlFor="name"
>
            Name: 
</label>,
          <input
            name="name"
            onChange={[Function]}
            type="text"
            value=""
/>,
          <label
            htmlFor="email"
>
            Email: 
</label>,
          <input
            name="email"
            onChange={[Function]}
            type="text"
            value=""
/>,
          <label
            htmlFor="password"
>
            Password: 
</label>,
          <input
            name="password"
            onChange={[Function]}
            type="text"
            value=""
/>,
          <input
            type="submit"
/>,
        ],
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Name: ",
            "htmlFor": "name",
          },
          "ref": null,
          "rendered": "Name: ",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "name",
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Email: ",
            "htmlFor": "email",
          },
          "ref": null,
          "rendered": "Email: ",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "email",
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Password: ",
            "htmlFor": "password",
          },
          "ref": null,
          "rendered": "Password: ",
          "type": "label",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "name": "password",
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "type": "submit",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
      ],
      "type": "form",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <form
          onSubmit={[Function]}
>
          <label
                    htmlFor="name"
          >
                    Name: 
          </label>
          <input
                    name="name"
                    onChange={[Function]}
                    type="text"
                    value=""
          />
          <label
                    htmlFor="email"
          >
                    Email: 
          </label>
          <input
                    name="email"
                    onChange={[Function]}
                    type="text"
                    value=""
          />
          <label
                    htmlFor="password"
          >
                    Password: 
          </label>
          <input
                    name="password"
                    onChange={[Function]}
                    type="text"
                    value=""
          />
          <input
                    type="submit"
          />
</form>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <label
              htmlFor="name"
>
              Name: 
</label>,
            <input
              name="name"
              onChange={[Function]}
              type="text"
              value=""
/>,
            <label
              htmlFor="email"
>
              Email: 
</label>,
            <input
              name="email"
              onChange={[Function]}
              type="text"
              value=""
/>,
            <label
              htmlFor="password"
>
              Password: 
</label>,
            <input
              name="password"
              onChange={[Function]}
              type="text"
              value=""
/>,
            <input
              type="submit"
/>,
          ],
          "onSubmit": [Function],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Name: ",
              "htmlFor": "name",
            },
            "ref": null,
            "rendered": "Name: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "name",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Email: ",
              "htmlFor": "email",
            },
            "ref": null,
            "rendered": "Email: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "email",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Password: ",
              "htmlFor": "password",
            },
            "ref": null,
            "rendered": "Password: ",
            "type": "label",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "name": "password",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "type": "submit",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
        ],
        "type": "form",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
